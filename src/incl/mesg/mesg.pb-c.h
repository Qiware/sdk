/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_mesg_2eproto__INCLUDED
#define PROTOBUF_C_mesg_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _Online Online;
typedef struct _Offline Offline;
typedef struct _OnlineAck OnlineAck;


/* --- enums --- */


/* --- messages --- */

struct  _Online
{
  ProtobufCMessage base;
  char *cid;
  char *token;
  char *version;
  char *appkey;
};
#define ONLINE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&online__descriptor) \
    , NULL, NULL, NULL, NULL }


struct  _Offline
{
  ProtobufCMessage base;
  protobuf_c_boolean has_code;
  int32_t code;
  char *msg;
  char *appkey;
};
#define OFFLINE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&offline__descriptor) \
    , 0,0, NULL, NULL }


struct  _OnlineAck
{
  ProtobufCMessage base;
  protobuf_c_boolean has_code;
  int32_t code;
  char *msg;
};
#define ONLINE_ACK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&online_ack__descriptor) \
    , 0,0, NULL }


/* Online methods */
void   online__init
                     (Online         *message);
size_t online__get_packed_size
                     (const Online   *message);
size_t online__pack
                     (const Online   *message,
                      uint8_t             *out);
size_t online__pack_to_buffer
                     (const Online   *message,
                      ProtobufCBuffer     *buffer);
Online *
       online__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   online__free_unpacked
                     (Online *message,
                      ProtobufCAllocator *allocator);
/* Offline methods */
void   offline__init
                     (Offline         *message);
size_t offline__get_packed_size
                     (const Offline   *message);
size_t offline__pack
                     (const Offline   *message,
                      uint8_t             *out);
size_t offline__pack_to_buffer
                     (const Offline   *message,
                      ProtobufCBuffer     *buffer);
Offline *
       offline__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   offline__free_unpacked
                     (Offline *message,
                      ProtobufCAllocator *allocator);
/* OnlineAck methods */
void   online_ack__init
                     (OnlineAck         *message);
size_t online_ack__get_packed_size
                     (const OnlineAck   *message);
size_t online_ack__pack
                     (const OnlineAck   *message,
                      uint8_t             *out);
size_t online_ack__pack_to_buffer
                     (const OnlineAck   *message,
                      ProtobufCBuffer     *buffer);
OnlineAck *
       online_ack__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   online_ack__free_unpacked
                     (OnlineAck *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Online_Closure)
                 (const Online *message,
                  void *closure_data);
typedef void (*Offline_Closure)
                 (const Offline *message,
                  void *closure_data);
typedef void (*OnlineAck_Closure)
                 (const OnlineAck *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor online__descriptor;
extern const ProtobufCMessageDescriptor offline__descriptor;
extern const ProtobufCMessageDescriptor online_ack__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_mesg_2eproto__INCLUDED */
